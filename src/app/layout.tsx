
'use client';

import type { Metadata } from 'next'; // Keep type import
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import Image from 'next/image';
import Link from 'next/link';
import { useState, useEffect } from "react";
import { Menu as MenuIcon, X as CloseIcon, Settings, User, Sun, Moon } from "lucide-react"; // Keep Sun/Moon for ModeToggle
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import { ThemeProvider } from "next-themes"; // Re-add ThemeProvider import
import { ModeToggle } from "@/components/ModeToggle"; // Re-add ModeToggle import

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// export const metadata: Metadata = { // Metadata must be defined in a server component or separate file
//   title: 'Campus Cuisine App',
//   description: 'Generated by Firebase Studio',
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
     // Load font size from localStorage on initial load
    const storedFontSize = localStorage.getItem("fontSizeClass");
    if (storedFontSize) {
      document.documentElement.classList.remove("text-sm", "text-base", "text-lg"); // Clean up first
      document.documentElement.classList.add(storedFontSize);
    } else {
      document.documentElement.classList.add("text-base"); // Default to medium
    }
     // Load accent color from localStorage on initial load
     const storedAccent = localStorage.getItem("accentColor");
     if (storedAccent) {
       document.documentElement.style.setProperty('--primary', storedAccent);
     }

     // Apply theme class based on localStorage or system preference handled by next-themes internally
     // No need for explicit theme application here if next-themes handles it via localStorage
  }, []);

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  // Close mobile menu when the screen becomes larger
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth >= 768) {
        setIsMobileMenuOpen(false);
      }
    };

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Add suppressHydrationWarning to html tag
  return (
    <html lang="en" suppressHydrationWarning>
      {/* Apply font variables and base styling */}
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased transition-colors duration-300 bg-background text-foreground`}>
         {/* Wrap body content with ThemeProvider */}
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {/* Navigation Bar */}
          <nav className="bg-background sticky top-0 z-50 border-b">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <div className="flex items-center justify-between h-16">
                {/* Left Side: Logo and Title */}
                <div className="flex items-center">
                  <Link href="/" className="flex items-center">
                    <Image
                      data-ai-hint="food logo"
                      src="https://picsum.photos/100/80"
                      alt="Campus Cuisine Logo"
                      width={50}
                      height={40}
                      className="mr-2 rounded-md"
                    />
                    <h1 className="text-xl font-bold">Campus Cuisine</h1>
                  </Link>
                </div>

                {/* Middle: Desktop Navigation Links */}
                <div className="hidden md:flex items-center space-x-4">
                  <ul className="flex space-x-4 items-center">
                    <li><Link href="/" className="hover:text-primary">Home</Link></li>
                    <li><Link href="/pricing" className="hover:text-primary">Pricing</Link></li>
                    <li><Link href="/meal-plan" className="hover:text-primary">Meal Plan</Link></li>
                     <li>
                        <Button variant="outline" size="sm" asChild>
                            <a href="tel:+918102116569">Order Now</a>
                        </Button>
                    </li>
                  </ul>
                </div>

                {/* Right Side: Icons and Mobile Menu Button */}
                <div className="flex items-center space-x-2 md:space-x-4">
                   {/* Top Right Icons - Visible on all screens */}
                  <div className="flex items-center space-x-1">
                     <Button variant="ghost" size="icon" asChild className="w-10 h-10">
                      <Link href="/contact" aria-label="Contact">
                        <User className="h-5 w-5" />
                      </Link>
                    </Button>
                    {/* Re-add ModeToggle */}
                    <ModeToggle />
                    <Button variant="ghost" size="icon" asChild className="w-10 h-10">
                       <Link href="/settings" aria-label="Settings">
                        <Settings className="h-5 w-5" />
                      </Link>
                    </Button>
                  </div>

                  {/* Mobile Menu Button */}
                  <div className="md:hidden">
                    <button
                      onClick={toggleMobileMenu}
                      className="text-foreground hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary rounded-md p-2"
                      aria-label="Open menu"
                      aria-expanded={isMobileMenuOpen}
                    >
                      {isMobileMenuOpen ? (
                        <CloseIcon className="h-6 w-6 transition-transform duration-300 transform rotate-90" />
                      ) : (
                        <MenuIcon className="h-6 w-6 transition-transform duration-300" />
                      )}
                    </button>
                  </div>

                    {/* Mobile Order Now Button */}
                    <div className="md:hidden">
                        <Button variant="outline" size="sm" asChild>
                             <a href="tel:+918102116569">Order Now</a>
                        </Button>
                    </div>
                </div>
              </div>
            </div>

            {/* Mobile Menu (Hidden by default) */}
            <div
              className={cn(
                "md:hidden transition-all duration-300 ease-in-out overflow-hidden",
                isMobileMenuOpen ? 'max-h-screen border-t' : 'max-h-0'
              )}
            >
              <div className="bg-background py-2 px-4">
                <ul className="flex flex-col space-y-2">
                  <li><Link href="/" className="hover:text-primary block py-2" onClick={toggleMobileMenu}>Home</Link></li>
                  <li><Link href="/pricing" className="hover:text-primary block py-2" onClick={toggleMobileMenu}>Pricing</Link></li>
                  <li><Link href="/meal-plan" className="hover:text-primary block py-2" onClick={toggleMobileMenu}>Meal Plan</Link></li>
                   <li><Link href="/contact" className="hover:text-primary block py-2" onClick={toggleMobileMenu}>Contact</Link></li>
                   <li><Link href="/settings" className="hover:text-primary block py-2" onClick={toggleMobileMenu}>Settings</Link></li>

                </ul>
              </div>
            </div>
          </nav>
          <main className="flex-grow">{children}</main>
        </ThemeProvider>
      </body>
    </html>
  );
}

